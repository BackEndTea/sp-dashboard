services:
    _defaults:
        autowire: true

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    surfnet.dashboard.command_handler.copy_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\CopyEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\CopyEntityCommand }

    surfnet.dashboard.command_handler.create_service:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Service\CreateServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Service\CreateServiceCommand }

    surfnet.dashboard.command_handler.delete_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\DeleteEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\DeleteEntityCommand }

    surfnet.dashboard.command_handler.edit_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\SaveEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\SaveEntityCommand }

    surfnet.dashboard.command_handler.edit_service:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Service\EditServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Service\EditServiceCommand }

    surfnet.dashboard.command_handler.load_metadata:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\LoadMetadataCommandHandler
        arguments:
            - '@surfnet.dashboard.metadata.fetcher'
            - '@surfnet.dashboard.metadata.parser'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\LoadMetadataCommand }

    surfnet.dashboard.command_handler.mailer:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Mail\SendMailCommandHandler
        public: true
        arguments: ['@surfnet.dashboard.mailer']
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Mail\PublishToProductionMailCommand }

    surfnet.dashboard.command_handler.privacy_questions:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\PrivacyQuestions\PrivacyQuestionsCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\PrivacyQuestions\PrivacyQuestionsCommand }

    surfnet.dashboard.command_handler.publish_test_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\PublishEntityTestCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PublishEntityTestCommand }

    surfnet.dashboard.command_handler.publish_production_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\PublishEntityProductionCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PublishEntityProductionCommand }

    surfnet.dashboard.command_handler.update_entity_status:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\UpdateEntityStatusCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\UpdateEntityStatusCommand }

    surfnet.dashboard.command_handler.select_service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\CommandHandler\Service\SelectServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Command\Service\SelectServiceCommand }

    surfnet.dashboard.mailer:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Mailer\Mailer
        arguments: ['@mailer']

    surfnet.dashboard.mailer_factory:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Factory\MailMessageFactory
        arguments:
            - '%mail_from%'
            - '%mail_receiver%'
            - '%mail_no_reply%'
            - '@translator'
            - '@templating'


    surfnet.dashboard.menu.builder:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Menu\Builder
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main }

    surfnet.dashboard.metadata.certificate_parser:
        class: Surfnet\ServiceProviderDashboard\Legacy\Metadata\CertificateParser

    surfnet.dashboard.metadata.client:
        class: GuzzleHttp\Client

    surfnet.dashboard.metadata.fetcher:
        class: Surfnet\ServiceProviderDashboard\Legacy\Metadata\Fetcher
        arguments: ['@surfnet.dashboard.metadata.client', '@logger', '%metadata_url_timeout%']

    surfnet.dashboard.metadata.generator:
        class: Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGenerator

    surfnet.dashboard.metadata.parser:
        class: Surfnet\ServiceProviderDashboard\Legacy\Metadata\Parser
        arguments:
            - '@surfnet.dashboard.metadata.certificate_parser'
            - '@surfnet.dashboard.repository.attributes_metadata'
            - '%kernel.root_dir%/Resources'
            - '@logger'

    surfnet.dashboard.monolog.json_formatter:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Monolog\Formatter\JsonFormatter

    surfnet.dashboard.repository.contact:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\ContactRepository
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Contact]

    surfnet.dashboard.repository.attributes_metadata:
        class: Surfnet\ServiceProviderDashboard\Legacy\Repository\AttributesMetadataRepository
        arguments:  ['%kernel.root_dir%/Resources']

    surfnet.dashboard.repository.entity:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Entity]

    surfnet.dashboard.repository.privacy_questions:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\PrivacyQuestionsRepository
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\PrivacyQuestions]

    surfnet.dashboard.repository.service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\ServiceRepository
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Service]

    surfnet.dashboard.service.authorization:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\AuthorizationService

    surfnet.dashboard.service.entity_service:
        class: Surfnet\ServiceProviderDashboard\Application\Service\EntityService

    surfnet.dashboard.service.service_service:
        class: Surfnet\ServiceProviderDashboard\Application\Service\ServiceService

    surfnet.dashboard.service.ticket:
        class: Surfnet\ServiceProviderDashboard\Application\Service\TicketService

    surfnet.dashboard.twig.service_switcher_extension:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Twig\ServiceSwitcherExtension
        tags: [twig.extension]

    surfnet.dashboard.twig.identity_extension:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Twig\IdentityExtension
        tags: [twig.extension]

    surfnet.dashboard.validator.entity_id:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidEntityIdValidator
        arguments:  ['@surfnet.manage.client.query_entity.test_environment']
        tags:
            - { name: validator.constraint_validator, alias: entity_id }

    surfnet.dashboard.validator.logo:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidLogoValidator
        tags:
            - { name: validator.constraint_validator, alias: logo }

    surfnet.manage.client.publish_entity.test_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient
        arguments:
            - '@surfnet.manage.http.client.test_environment'
            - '@surfnet.dashboard.metadata.generator'
            - '@logger'

    surfnet.manage.client.query_entity.test_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient
        arguments:
            - '@surfnet.manage.http.client.test_environment'

    surfnet.manage.http.client.test_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient
        arguments:
            - '@surfnet.manage.http.guzzle.test_environement'

    surfnet.manage.http.guzzle.test_environement:
        class: GuzzleHttp\Client
        arguments:
        - base_uri: "%manage_test_host%"
          auth: ["%manage_test_username%", "%manage_test_password%", "Basic"]
